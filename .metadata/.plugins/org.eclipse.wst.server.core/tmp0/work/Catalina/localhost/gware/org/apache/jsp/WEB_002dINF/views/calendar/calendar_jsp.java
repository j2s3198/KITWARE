/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-02-14 20:20:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.calendar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class calendar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/hushe/dev/eclipse-jee-2018-12-R-win32-x86_64/gware/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/gware/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1549773277699L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <!-- <META HTTP-EQUIV=\"refresh\" CONTENT=\"60\"> -->\r\n");
      out.write("  <title>Calendar</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<!-- bootstrap ref -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- fullcalendar ref -->\r\n");
      out.write("<link rel='stylesheet' href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/fullcalendar/fullcalendar.css' />\r\n");
      out.write("\r\n");
      out.write("<script src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/fullcalendar/lib/moment.min.js'></script>\r\n");
      out.write("<script src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/fullcalendar/fullcalendar.js'></script>\r\n");
      out.write("<script src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/fullcalendar/lang/ko.js'></script>\r\n");
      out.write("\r\n");
      out.write("<!-- summernote -->\r\n");
      out.write("<link href=\"http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- jscolor -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/jscolor.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\t\r\n");
      out.write("\t  $('#summernote').summernote({\r\n");
      out.write("\t\t  lang: 'ko-KR',\r\n");
      out.write("\t      height: 200,\r\n");
      out.write("\t      popover: {\r\n");
      out.write("\t    \t  image:[],\r\n");
      out.write("\t    \t  link:[],\r\n");
      out.write("\t    \t  air:[]\r\n");
      out.write("\t      },\r\n");
      out.write("\t      toolbar: [\r\n");
      out.write("\t    \t    // [groupName, [list of button]]\r\n");
      out.write("\t    \t    ['style', ['bold', 'italic', 'underline', 'clear']],\r\n");
      out.write("\t    \t    ['font', ['strikethrough', 'superscript', 'subscript']],\r\n");
      out.write("\t    \t    ['fontsize', ['fontsize']],\r\n");
      out.write("\t    \t    ['color', ['color']],\r\n");
      out.write("\t    \t    ['para', ['ul', 'ol', 'paragraph']],\r\n");
      out.write("\t    \t    ['height', ['height']]\r\n");
      out.write("\t    \t  ]\r\n");
      out.write("\t  });\r\n");
      out.write("\t  \r\n");
      out.write("\t  $('#modsummernote').summernote({\r\n");
      out.write("\t\t  lang: 'ko-KR',\r\n");
      out.write("\t      height: 200,\r\n");
      out.write("\t      popover: {\r\n");
      out.write("\t    \t  image:[],\r\n");
      out.write("\t    \t  link:[],\r\n");
      out.write("\t    \t  air:[]\r\n");
      out.write("\t      },\r\n");
      out.write("\t      toolbar: [\r\n");
      out.write("\t    \t    // [groupName, [list of button]]\r\n");
      out.write("\t    \t    ['style', ['bold', 'italic', 'underline', 'clear']],\r\n");
      out.write("\t    \t    ['font', ['strikethrough', 'superscript', 'subscript']],\r\n");
      out.write("\t    \t    ['fontsize', ['fontsize']],\r\n");
      out.write("\t    \t    ['color', ['color']],\r\n");
      out.write("\t    \t    ['para', ['ul', 'ol', 'paragraph']],\r\n");
      out.write("\t    \t    ['height', ['height']]\r\n");
      out.write("\t    \t  ]\r\n");
      out.write("\t  });\r\n");
      out.write("\t  \r\n");
      out.write("});// ready end\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var events_array = [];\r\n");
      out.write("\r\n");
      out.write("//getAll =================================\r\n");
      out.write("$.ajax({\r\n");
      out.write("  type: 'POST',\r\n");
      out.write("  url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendar/getAll\",\r\n");
      out.write("  success: function(data) {\r\n");
      out.write("\t\tvar list = JSON.parse(data);\r\n");
      out.write("\t\t//console.log(list);\r\n");
      out.write("\t\tfor(var i = 0 ; i<list.length; i++){\r\n");
      out.write("\t\t\tvar start = new Date(list[i].start);\r\n");
      out.write("\t\t\tvar end = new Date(list[i].end);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar row = printCal(list[i]);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif((end-start)%86400000 == 0){\r\n");
      out.write("\t\t\t\trow.allDay = true\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\t\tevents_array.push(row); // set default event\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t} //for end\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("    // We will refer to $calendar in future code\r\n");
      out.write("    var $calendar = $(\"#calendar\").fullCalendar({ //start of options\r\n");
      out.write("        //weekends : false, // do not show saturday/sunday\r\n");
      out.write("        header: {\r\n");
      out.write("          left: 'prevYear,nextYear',\r\n");
      out.write("          center: 'title',\r\n");
      out.write("          right: 'today,month,agendaDay,agendaWeek prev,next'\r\n");
      out.write("        },\r\n");
      out.write("        // Make possible to respond to clicks and selections\r\n");
      out.write("        selectable: true,\r\n");
      out.write("        // allow \"more\" link when too many events\r\n");
      out.write("        eventLimit: true,\r\n");
      out.write("        navLinks: true,\r\n");
      out.write("        // Make events editable, globally\r\n");
      out.write("        editable: true,\r\n");
      out.write("        \r\n");
      out.write("        //defaultView: 'listWeek',\r\n");
      out.write("        \r\n");
      out.write("      //Drop =================================\r\n");
      out.write("        eventDrop: function(event, delta, revertFunc) {\r\n");
      out.write("        \t\r\n");
      out.write("        \t\tif (event.username == username || chief == username) {\r\n");
      out.write("        \t\t\t\r\n");
      out.write("        \t\t\tif(confirm(\"정말 변경하시겠습니까?\")){\r\n");
      out.write("        \t\t\t\tvar data = {\r\n");
      out.write("                      \t\t  calnum: event.calnum,\r\n");
      out.write("                                title: event.title,\r\n");
      out.write("                                start: event.start,\r\n");
      out.write("                                end: event.end\r\n");
      out.write("                              };\r\n");
      out.write("                      console.log(data);\r\n");
      out.write("                      $.ajax({\r\n");
      out.write("                          type: 'GET',\r\n");
      out.write("                          url: \"./modifyEvent.do\",\r\n");
      out.write("                          data: {\r\n");
      out.write("                            \"event\": JSON.stringify(data),\r\n");
      out.write("                          },\r\n");
      out.write("                          success: function(data) {\r\n");
      out.write("            \t\t\t\t\tconsole.log(data);\r\n");
      out.write("                              // Call the \"updateEvent\" method\r\n");
      out.write("                              $calendar.fullCalendar(\"updateEvent\", event);\r\n");
      out.write("                              \r\n");
      out.write("                              return;\r\n");
      out.write("                          }\r\n");
      out.write("                        });\r\n");
      out.write("        \t\t\t}else{\r\n");
      out.write("            \t\t      revertFunc();\r\n");
      out.write("            \t\t\t  return;   \r\n");
      out.write("                      }\r\n");
      out.write("                      \r\n");
      out.write("                    \r\n");
      out.write("        \t    }else{\r\n");
      out.write("        \t    \t\r\n");
      out.write("        \t\t\t  alert(\"본인의 이벤트만 변경할 수 있습니다.\")\r\n");
      out.write("        \t\t      revertFunc();\r\n");
      out.write("        \t\t\t  return;        \t    \t\r\n");
      out.write("        \t    \t\r\n");
      out.write("        \t    }\r\n");
      out.write("        },\r\n");
      out.write("        \r\n");
      out.write("        eventResize: function(event, delta, revertFunc) {\r\n");
      out.write("        \t\r\n");
      out.write("        \r\n");
      out.write("    \t\tif (event.username == username || chief == username) {\r\n");
      out.write("    \t\t\t\r\n");
      out.write("    \t\t\tif(confirm(\"정말 변경하시겠습니까?\")){\r\n");
      out.write("    \t\t\t\tvar data = {\r\n");
      out.write("                  \t\t  calnum: event.calnum,\r\n");
      out.write("                            title: event.title,\r\n");
      out.write("                            start: event.start,\r\n");
      out.write("                            end: event.end\r\n");
      out.write("                          };\r\n");
      out.write("                  console.log(data);\r\n");
      out.write("                  $.ajax({\r\n");
      out.write("                      type: 'GET',\r\n");
      out.write("                      url: \"./modifyEvent.do\",\r\n");
      out.write("                      data: {\r\n");
      out.write("                        \"event\": JSON.stringify(data),\r\n");
      out.write("                      },\r\n");
      out.write("                      success: function(data) {\r\n");
      out.write("        \t\t\t\t\tconsole.log(data);\r\n");
      out.write("                          // Call the \"updateEvent\" method\r\n");
      out.write("                          $calendar.fullCalendar(\"updateEvent\", event);\r\n");
      out.write("                          \r\n");
      out.write("                          return;\r\n");
      out.write("                      }\r\n");
      out.write("                    });\r\n");
      out.write("    \t\t\t}else{\r\n");
      out.write("        \t\t      revertFunc();\r\n");
      out.write("        \t\t\t  return;   \r\n");
      out.write("                  }\r\n");
      out.write("                  \r\n");
      out.write("                \r\n");
      out.write("    \t    }else{\r\n");
      out.write("    \t    \t\r\n");
      out.write("    \t\t\t  alert(\"본인의 이벤트만 변경할 수 있습니다.\")\r\n");
      out.write("    \t\t      revertFunc();\r\n");
      out.write("    \t\t\t  return;        \t    \t\r\n");
      out.write("    \t    \t\r\n");
      out.write("    \t    }\r\n");
      out.write("        },\r\n");
      out.write("        //This is the callback that will be triggered when a selection is made\r\n");
      out.write("        /*select: function(start, end, jsEvent, view) {\r\n");
      out.write("          alert(start.format(\"MM/DD/YYYY hh:mm a\") + \" to \" + end.format(\"MM/DD/YYYY h\\\r\n");
      out.write("          h:mm a\") + \" in view \" + view.name);\r\n");
      out.write("        },*/\r\n");
      out.write("        eventRender: function(event, element, view) {\r\n");
      out.write("              },\r\n");
      out.write("        select: function(start, end, jsEvent, view) {\r\n");
      out.write("          // Ask for a title. If empty it will default to \"New event\"\r\n");
      out.write("         \r\n");
      out.write("          $('#start_date').val(moment(start).format('YYYY-MM-DD'));\r\n");
      out.write("          $('#start_time').val(moment(\"2013-02-08 09:30 \").format('hh:mm:ss'));\r\n");
      out.write("          $('#end_date').val(moment(end).subtract(1, 'days').format('YYYY-MM-DD'));\r\n");
      out.write("          $('#end_time').val(moment(end).format('hh:mm:ss'));\r\n");
      out.write("          \r\n");
      out.write("          $(\"#myModal\").modal();\r\n");
      out.write(" \r\n");
      out.write("        }, // End select callback\r\n");
      out.write("        // Callback triggered when we click on an event\r\n");
      out.write("        eventClick: function(event, jsEvent, view) {\r\n");
      out.write("        \t\r\n");
      out.write("        \tvar cl = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cateList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("        \t\r\n");
      out.write("        \tvar cate_name;\r\n");
      out.write("        \t\r\n");
      out.write("\t        for(var o = 0 ; o < cl.length ; o++){\r\n");
      out.write("\t        \tif(cl[o].cal_cate_id == event.calendar_cate){\r\n");
      out.write("\t\t       \t\tcate_name = cl[o].cal_cate_name;\r\n");
      out.write("\t        \t}\r\n");
      out.write("\t        }\r\n");
      out.write("\t        \r\n");
      out.write("\t        \tvar cateNum = 0;\r\n");
      out.write("\t        //console.log(typeof(event.calendar_cate));\r\n");
      out.write("\t        //console.log(event.calendar_cate);\r\n");
      out.write("\t        if(typeof(event.calendar_cate) == 'string'){\r\n");
      out.write("\t        \tcate_name = event.calendar_cate;\r\n");
      out.write("\t        }else{\r\n");
      out.write("\t        \tcateNum = parseInt(event.calendar_cate);\r\n");
      out.write("\t        }\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        \r\n");
      out.write("        \t//console.log(cate_name)\r\n");
      out.write("        \t//console.log(cate_name)\r\n");
      out.write("        \t//console.log(moment(event.end).format('YYYY-MM-DD  hh:mm:ss'))\r\n");
      out.write("        \t\r\n");
      out.write("        \t$(\"#pid\").val(event.id);\r\n");
      out.write("        \t$('#colorProp').val(event.color);\r\n");
      out.write("        \t$('#cate_num').val(cateNum);\r\n");
      out.write("        \t\r\n");
      out.write("        \tif(event.allDay){\r\n");
      out.write("\t        \t$('#isallDay').val('1');\r\n");
      out.write("        \t}else{\r\n");
      out.write("\t        \t$('#isallDay').val('0');\r\n");
      out.write("        \t}\r\n");
      out.write("        \t\r\n");
      out.write("\t    \t$(\"#pselect\").text(cate_name);\r\n");
      out.write("        \t$(\"#psubject\").text(event.title);\r\n");
      out.write("        \t$(\"#pcontent\").html(event.content);\r\n");
      out.write("        \t$('#pstart').text(moment(event.start).format('YYYY-MM-DD  hh:mm:ss'));\r\n");
      out.write("        \t$('#pend').text(moment(event.end).format('YYYY-MM-DD  hh:mm:ss'));\r\n");
      out.write("        \t\r\n");
      out.write("        \t$(\"#dayModal\").modal();\t\r\n");
      out.write("        \t\r\n");
      out.write("        \t\r\n");
      out.write("\r\n");
      out.write("        \t/* \r\n");
      out.write("    \t\tif (event.username == username || chief == username) {\r\n");
      out.write("    \t\t\t\r\n");
      out.write("    \t\t\t\r\n");
      out.write("    \t\t\t// Ask for a title. If empty it will default to \"New event\"\r\n");
      out.write("    \t          var newTitle = prompt(\"변경할 제목을 입력해 주세요\", event.title);\r\n");
      out.write("    \t          // If did not pressed Cancel button\r\n");
      out.write("    \t          if (newTitle != null) {\r\n");
      out.write("    \t            // Update event\r\n");
      out.write("    \t            event.title = newTitle.trim() != \"\" ? newTitle : event.title;\r\n");
      out.write("    \t            \r\n");
      out.write("    \t              var data = {\r\n");
      out.write("    \t            \t\t  calnum: event.calnum,\r\n");
      out.write("    \t                      title: event.title,\r\n");
      out.write("    \t                      start: event.start,\r\n");
      out.write("    \t                      end: event.end\r\n");
      out.write("    \t                    };\r\n");
      out.write("    \t            \r\n");
      out.write("    \t            $.ajax({\r\n");
      out.write("    \t                type: 'GET',\r\n");
      out.write("    \t                url: \"./modifyEvent.do\",\r\n");
      out.write("    \t                data: {\r\n");
      out.write("    \t                  \"event\": JSON.stringify(data),\r\n");
      out.write("    \t                },\r\n");
      out.write("    \t                success: function(data) {\r\n");
      out.write("    \t\t\t\t\t\tconsole.log(data);\r\n");
      out.write("    \t                    // Call the \"updateEvent\" method\r\n");
      out.write("    \t                    $calendar.fullCalendar(\"updateEvent\", event);\r\n");
      out.write("    \t                }\r\n");
      out.write("    \t              });\r\n");
      out.write("    \t          }else{\r\n");
      out.write("        \t\t      revertFunc();\r\n");
      out.write("        \t\t\t  return;    \r\n");
      out.write("    \t          }\r\n");
      out.write("    \t\t\t\r\n");
      out.write("    \t    }else{\r\n");
      out.write("    \t\t\t  alert(\"본인의 이벤트만 변경할 수 있습니다.\");\r\n");
      out.write("    \t\t      revertFunc();\r\n");
      out.write("    \t\t\t  return;    \r\n");
      out.write("    \t    } */\r\n");
      out.write("    \t\r\n");
      out.write("    \t    \r\n");
      out.write("\r\n");
      out.write("        \t\r\n");
      out.write("        }, // End callback eventClick\r\n");
      out.write("        events: events_array\r\n");
      out.write("      } //End of options\r\n");
      out.write("    \r\n");
      out.write("  );// calendar end\r\n");
      out.write("  \r\n");
      out.write("  }) //ready end\r\n");
      out.write("  \r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  });//ajax end\r\n");
      out.write("  \r\n");
      out.write("  function registBtn(){\r\n");
      out.write("\t  \r\n");
      out.write("\t  var stitle = $('#sname').val();\r\n");
      out.write("\t  var scontent = $('#summernote').val();\r\n");
      out.write("\t  \r\n");
      out.write("\t  var start = $('#start_date').val();\r\n");
      out.write("\t  var end = $('#end_date').val();\r\n");
      out.write("\t  var start_time = $('#start_time').val();\r\n");
      out.write("\t  var end_time = $('#end_time').val();\r\n");
      out.write("\r\n");
      out.write("\t  var calCate = $('#calCate').val();\r\n");
      out.write("\t  var selfInput =$('#selfInput').val();\r\n");
      out.write("\t  \r\n");
      out.write("\t  var allDay = $('#allDay').is(\":checked\");\r\n");
      out.write("\t  var colorFix;\r\n");
      out.write("\t // console.log(allDay);\r\n");
      out.write("\t  \r\n");
      out.write("\t var cateSelf;\r\n");
      out.write("\t \r\n");
      out.write("\t  if(calCate == 0 && selfInput.trim() == ''){\r\n");
      out.write("\t\t  alert('일정 구분을 입력해주세요');\r\n");
      out.write("\t\t  return;\r\n");
      out.write("\t  }else if(calCate == 0){\r\n");
      out.write("\t\t  cateSelf = selfInput.trim();\r\n");
      out.write("\t\t  colorFix = $('#colorFix').val();\r\n");
      out.write("\t  }else {\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\tvar cl = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cateList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i in cl){\r\n");
      out.write("\t\t\tif(cl[i].cal_cate_id == calCate){\r\n");
      out.write("\t\t\t\tcolorFix = cl[i].cal_cate_color;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t  }\r\n");
      out.write("\t  \r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t\t\tconsole.log(colorFix);\r\n");
      out.write("      \t\r\n");
      out.write("\t  \r\n");
      out.write("\t  if(stitle.trim() == ''){\r\n");
      out.write("\t\t  alert('제목을 다시 입력해 주세요');\r\n");
      out.write("\t\t  $('#sname').val('');\r\n");
      out.write("\t\t  return;\r\n");
      out.write("\t  }\r\n");
      out.write("      \r\n");
      out.write("\t  \r\n");
      out.write("      if (stitle != '' && scontent != '' && start != null && end != null) {\r\n");
      out.write("    \t  \r\n");
      out.write("    \tvar st;\r\n");
      out.write("    \tvar en;\r\n");
      out.write("\t\t\r\n");
      out.write("    \t\r\n");
      out.write("      \t\r\n");
      out.write("      \tif(!allDay && st >= en){\r\n");
      out.write("    \t\talert(\"종료 일이 시작일 보다 빠를 수 없습니다.\");\r\n");
      out.write("    \t\treturn;\r\n");
      out.write("      \t}\r\n");
      out.write("\t\t\r\n");
      out.write("      \t\r\n");
      out.write("      \tvar allDayCheck = 0;\r\n");
      out.write("      \tif(allDay){\r\n");
      out.write("      \t\tst = start;\r\n");
      out.write("      \t\ten = moment(end).add(1, 'days').format('YYYY-MM-DD');\r\n");
      out.write("      \t\tallDayCheck = 1;\r\n");
      out.write("      \t}else{\r\n");
      out.write("\t      \tst = start+\" \"+start_time;\r\n");
      out.write("\t      \ten = end+\" \"+end_time;\r\n");
      out.write("\t      \tallDayCheck = 0;\r\n");
      out.write("      \t}\r\n");
      out.write("\t    var param = \"calendar_start=\"+st+\"&calendar_end=\"+en+\"&calendar_title=\"+stitle.trim()+\"&calendar_content=\"+scontent+\"&calendar_cate=\"+calCate+\"&calendar_allDay=\"+allDayCheck+\"&calendar_cateSelf=\"+cateSelf+\"&calendar_color=\"+colorFix;\r\n");
      out.write("      \t// +\"&calendar_member_id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("      \tconsole.log(param);\r\n");
      out.write("      \t\r\n");
      out.write("        $.ajax({\r\n");
      out.write("          type: 'POST',\r\n");
      out.write("          url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendar/addEvent\",\r\n");
      out.write("          data: param,\r\n");
      out.write("          success: function(data) {\r\n");
      out.write("        \t  if(data != null){\r\n");
      out.write("        \t  \r\n");
      out.write("        \t\t  obj = JSON.parse(data);\r\n");
      out.write("        \t\t  console.log(obj);\r\n");
      out.write("        \t\t  \r\n");
      out.write("        \t\t  var event = printCal(obj);\r\n");
      out.write("        \t\t  \r\n");
      out.write("            $('#calendar').fullCalendar(\"renderEvent\", event, true);\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            $(\"#myModal\").modal('hide');\r\n");
      out.write("            $('#sname').val('');\r\n");
      out.write("            $('#selfInput').val('');\r\n");
      out.write("            $('#summernote').summernote('reset');\r\n");
      out.write("            $('#firstNode').removeAttr('selected');\r\n");
      out.write("            $('#firstNode').attr('selected','selected');\r\n");
      out.write("            $('#selfCate').css('display','none');\r\n");
      out.write("            $('#allDay').prop('checked',false);\r\n");
      out.write("            $('#start_time').removeAttr('disabled');\r\n");
      out.write("\t\t\t$('#end_time').removeAttr('disabled');\r\n");
      out.write("            \r\n");
      out.write("        \t  }else{\r\n");
      out.write("        \t\t  alert('일정 등록 오류가 발생하였습니다.');\r\n");
      out.write("        \t\t  return;\r\n");
      out.write("        \t  }\r\n");
      out.write("          } // success end\r\n");
      out.write("        }); // ajax end\r\n");
      out.write("        // Push event into fullCalendar's array of events\r\n");
      out.write("        // and displays it. The last argument is the\r\n");
      out.write("        // \"stick\" value. If set to true the event\r\n");
      out.write("        // will \"stick\" even after you move to other\r\n");
      out.write("        // year, month, day or week.\r\n");
      out.write("      }else{\r\n");
      out.write("    \t  alert('일정을 입력해주세요');\r\n");
      out.write("    \t  return;\r\n");
      out.write("      };\r\n");
      out.write("      // Whatever happens, unselect selection\r\n");
      out.write("      //$calendar.fullCalendar(\"unselect\");\r\n");
      out.write("\t  \r\n");
      out.write("  }// registBtn end\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  $(document).on(\"click\", \"#deleteBtn\", function() {\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  var pid = $(\"#pid\").val();\r\n");
      out.write("\t\t  var nPid = parseInt(pid);\r\n");
      out.write("\t\t  console.log(typeof(pid))\r\n");
      out.write("\t\t  console.log(typeof(nPid))\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  if(confirm('정말 삭제하시겠습니까?')){\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\tvar param = \"pId=\"+pid;\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t              type: 'POST',\r\n");
      out.write("\t              url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendar/removeCal\",\r\n");
      out.write("\t              data: param,\r\n");
      out.write("\t              success: function(data) {\r\n");
      out.write("\t            \tconsole.log(data);\r\n");
      out.write("\t            \t  \t\r\n");
      out.write("\t            \t  \t$('#calendar').fullCalendar('removeEvents', data);\r\n");
      out.write("\t            \t  \t\r\n");
      out.write("\t            \t\t$(\"#dayModal\").modal(\"hide\");\t\r\n");
      out.write("\t            }// success end\r\n");
      out.write("\t\t\t});// ajax\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t  }else{\r\n");
      out.write("\t\t\t  return;\r\n");
      out.write("\t\t  }//remove? end\r\n");
      out.write("\t\t  \r\n");
      out.write("\t  });// delBtn end\r\n");
      out.write("  \r\n");
      out.write("\t  \r\n");
      out.write("\t  function modifyBtn(){\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  \r\n");
      out.write("      \t\r\n");
      out.write("\t\tvar title = $(\"#psubject\").text();\r\n");
      out.write("      \tvar content = $(\"#pcontent\").html();\r\n");
      out.write("\r\n");
      out.write("      \tvar endDate = moment($('#pend').text()).format('YYYY-MM-DD');\r\n");
      out.write("      \tvar endTime = moment($('#pend').text()).format('hh:mm:ss');\r\n");
      out.write("      \t\r\n");
      out.write("      \tvar startDate = moment($('#pstart').text()).format('YYYY-MM-DD');\r\n");
      out.write("      \tvar startTime = moment($('#pstart').text()).format('hh:mm:ss');\r\n");
      out.write("\r\n");
      out.write("      \tvar cate_name = $('#pselect').text()\r\n");
      out.write("      \tvar cateNum = $(\"#cate_num\").val();\r\n");
      out.write("      \tvar color = $('#colorProp').val();\r\n");
      out.write("      \tvar calId = $(\"#pid\").val();\r\n");
      out.write("      \t\r\n");
      out.write("      \tvar isallDay = $('#isallDay').val();\r\n");
      out.write("      \t\r\n");
      out.write("      \t//console.log(typeof(cateNum))\r\n");
      out.write("      \t//console.log(cateNum)\r\n");
      out.write("      \t\r\n");
      out.write("      \tif(isallDay == 1){\r\n");
      out.write("      \t\t$('#modallDay').attr('checked',true);\r\n");
      out.write("      \t\t$('#modstart_time').attr('disabled',true);\r\n");
      out.write("\t\t\t$('#modend_time').attr('disabled',true);\r\n");
      out.write("      \t}else{\r\n");
      out.write("      \t\t$('#modallDay').attr('checked',false);\r\n");
      out.write("      \t\t$('#modstart_time').attr('disabled',false);\r\n");
      out.write("\t\t\t$('#modend_time').attr('disabled',false);\r\n");
      out.write("      \t}\r\n");
      out.write("      \t\r\n");
      out.write("      \t\r\n");
      out.write("      \t//console.log(cate_name);\r\n");
      out.write("      \tif(cateNum == 0){\r\n");
      out.write("\t      \t$('#modselfInput').val(cate_name);\r\n");
      out.write("\t      \t$('#modcolorFix').val(color);\r\n");
      out.write("\t      \t$('#modselfCate').css('display','block');\r\n");
      out.write("      \t}else{\r\n");
      out.write("\t      \t$('#modselfInput').val('');\r\n");
      out.write("\t      \t$('#modcolorFix').val('');\r\n");
      out.write("\t      \t$('#modselfCate').css('display','none');\r\n");
      out.write("      \t}\r\n");
      out.write("      \t\r\n");
      out.write("      \t//console.log(\"title\"+ title, \"content\"+ content, \"endDate\"+ endDate, \"startDate\"+ startDate, \"cateNum\"+ cateNum, \"color\"+ color, \"calId\"+ calId);\r\n");
      out.write("      \t\r\n");
      out.write("      \t$('#modsname').val(title);\r\n");
      out.write("      \t//$('#modsummernote').val(content);\r\n");
      out.write("      \t $('#modsummernote').summernote('code', content);\r\n");
      out.write("      \t \r\n");
      out.write("      \t$('#modend_date').val(endDate);\r\n");
      out.write("      \t$('#modend_time').val(endTime);\r\n");
      out.write("      \t$('#modstart_date').val(startDate);\r\n");
      out.write("      \t$('#modstart_time').val(startTime);\r\n");
      out.write("      \t\r\n");
      out.write("      \t$('#modcalCate').val(cateNum);\r\n");
      out.write("      \t$('#calId').val(calId);\r\n");
      out.write("      \t\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  $(\"#modModal\").modal();\r\n");
      out.write("\t\t  \r\n");
      out.write("\t  }// modifyBtn end\r\n");
      out.write("\t  \r\n");
      out.write("\t  //=================================================================================================================\r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  function modiftCal(){\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  var calId = $('#calId').val();\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  var stitle = $('#modsname').val();\r\n");
      out.write("\t\t  var scontent = $('#modsummernote').val();\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  var start = $('#modstart_date').val();\r\n");
      out.write("\t\t  var end = $('#modend_date').val();\r\n");
      out.write("\t\t  var start_time = $('#modstart_time').val();\r\n");
      out.write("\t\t  var end_time = $('#modend_time').val();\r\n");
      out.write("\r\n");
      out.write("\t\t  var calCate = $('#modcalCate').val();\r\n");
      out.write("\t\t  var selfInput =$('#modselfInput').val();\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  var allDay = $('#modallDay').is(\":checked\");\r\n");
      out.write("\t\t  var colorFix;\r\n");
      out.write("\t\t // console.log(allDay);\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t var cateSelf;\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t  if(calCate == 0 && selfInput.trim() == ''){\r\n");
      out.write("\t\t\t  alert('일정 구분을 입력해주세요');\r\n");
      out.write("\t\t\t  return;\r\n");
      out.write("\t\t  }else if(calCate == 0){\r\n");
      out.write("\t\t\t  cateSelf = selfInput.trim();\r\n");
      out.write("\t\t\t  colorFix = $('#modcolorFix').val();\r\n");
      out.write("\t\t  }else {\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\tvar cl = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cateList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i in cl){\r\n");
      out.write("\t\t\t\tif(cl[i].cal_cate_id == calCate){\r\n");
      out.write("\t\t\t\t\tcolorFix = cl[i].cal_cate_color;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t\t\tconsole.log(colorFix);\r\n");
      out.write("\t      \t\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  if(stitle.trim() == ''){\r\n");
      out.write("\t\t\t  alert('제목을 다시 입력해 주세요');\r\n");
      out.write("\t\t\t  $('#sname').val('');\r\n");
      out.write("\t\t\t  return;\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t      \r\n");
      out.write("\t\t  \r\n");
      out.write("\t      if (stitle != '' && scontent != '' && start != null && end != null) {\r\n");
      out.write("\t    \t  \r\n");
      out.write("\t    \tvar st;\r\n");
      out.write("\t    \tvar en;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t    \t\r\n");
      out.write("\t      \t\r\n");
      out.write("\t      \tif(!allDay && st >= en){\r\n");
      out.write("\t    \t\talert(\"종료 일이 시작일 보다 빠를 수 없습니다.\");\r\n");
      out.write("\t    \t\treturn;\r\n");
      out.write("\t      \t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t      \t\r\n");
      out.write("\t      \tvar allDayCheck = 0;\r\n");
      out.write("\t      \tif(allDay){\r\n");
      out.write("\t      \t\tst = start;\r\n");
      out.write("\t      \t\t//en = moment(end).add(1, 'days').format('YYYY-MM-DD');\r\n");
      out.write("\t      \t\ten = end;\r\n");
      out.write("\t      \t\tallDayCheck = 1;\r\n");
      out.write("\t      \t}else{\r\n");
      out.write("\t\t      \tst = start+\" \"+start_time;\r\n");
      out.write("\t\t      \ten = end+\" \"+end_time;\r\n");
      out.write("\t\t      \tallDayCheck = 0;\r\n");
      out.write("\t      \t}\r\n");
      out.write("\t\t    var param = \"calendar_start=\"+st+\"&calendar_end=\"+en+\"&calendar_title=\"+stitle.trim()+\"&calendar_content=\"+scontent+\"&calendar_cate=\"+calCate+\"&calendar_allDay=\"+allDayCheck+\"&calendar_cateSelf=\"+cateSelf+\"&calendar_color=\"+colorFix+\"&calendar_id=\"+calId;\r\n");
      out.write("\t      \t// +\"&calendar_member_id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("\t      \t\r\n");
      out.write("\t      \tconsole.log(param);\r\n");
      out.write("\t      \t\r\n");
      out.write("\t        $.ajax({\r\n");
      out.write("\t          type: 'POST',\r\n");
      out.write("\t          url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendar/modiEvent\",\r\n");
      out.write("\t          data: param,\r\n");
      out.write("\t          success: function(data) {\r\n");
      out.write("\t        \t  if(data != null){\r\n");
      out.write("\t        \t  \r\n");
      out.write("\t        \t\t  var obj = JSON.parse(data);\r\n");
      out.write("\t        \t\t  console.log(obj);\r\n");
      out.write("/* \t        \t\t  if(obj.allDay == 1){\r\n");
      out.write("\t        \t\t\t  \r\n");
      out.write("\t        \t\t  console.log(obj.end)\r\n");
      out.write("\t        \t\t  obj.end = moment(obj.end).subtract(1, 'days').format('YYYY-MM-DD');\r\n");
      out.write("\t        \t\t  console.log(obj.end)\r\n");
      out.write("\t        \t\t  \r\n");
      out.write("\t        \t\t  } */\r\n");
      out.write("\t        \t\t  \r\n");
      out.write("\t        \t\t  var event = printCal(obj);\r\n");
      out.write("\t        \t\t  $('#calendar').fullCalendar('removeEvents', event.id);\r\n");
      out.write("\t        \t\t  \r\n");
      out.write("\t        \t\t  $('#calendar').fullCalendar(\"renderEvent\", event, true);\r\n");
      out.write("\t            \r\n");
      out.write("\t            $(\"#modModal\").modal('hide');\r\n");
      out.write("\t            $('#modsname').val('');\r\n");
      out.write("\t            $('#modselfInput').val('');\r\n");
      out.write("\t            $('#modsummernote').summernote('reset');\r\n");
      out.write("\t            $('#modfirstNode').removeAttr('selected');\r\n");
      out.write("\t            $('#modfirstNode').attr('selected','selected');\r\n");
      out.write("\t            $('#modselfCate').css('display','none');\r\n");
      out.write("\t            //$('#modallDay').prop('checked',false);\r\n");
      out.write("\t            $('#modstart_time').removeAttr('disabled');\r\n");
      out.write("\t\t\t\t$('#modend_time').removeAttr('disabled');\r\n");
      out.write("\t            \r\n");
      out.write("\t        \t  }else{\r\n");
      out.write("\t        \t\t  alert('오류가 발생하였습니다.');\r\n");
      out.write("\t        \t\t  return;\r\n");
      out.write("\t        \t  }\r\n");
      out.write("\t          } // success end\r\n");
      out.write("\t        }); // ajax end\r\n");
      out.write("\t        // Push event into fullCalendar's array of events\r\n");
      out.write("\t        // and displays it. The last argument is the\r\n");
      out.write("\t        // \"stick\" value. If set to true the event\r\n");
      out.write("\t        // will \"stick\" even after you move to other\r\n");
      out.write("\t        // year, month, day or week.\r\n");
      out.write("\t      }else{\r\n");
      out.write("\t    \t  alert('일정을 입력해주세요');\r\n");
      out.write("\t    \t  return;\r\n");
      out.write("\t      };\r\n");
      out.write("\t      // Whatever happens, unselect selection\r\n");
      out.write("\t      //$calendar.fullCalendar(\"unselect\");\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  \r\n");
      out.write("\t  }// modiftCal end\r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("  function printCal(obj){\r\n");
      out.write("\t  if(obj.allDay == 0){\r\n");
      out.write("\t\t  if(obj.calendar_cate != 0){\r\n");
      out.write("\t\t\t\tvar event = {\r\n");
      out.write("\t\t\t\t\t\tid: obj.calendar_id+\"\",\r\n");
      out.write("\t\t\t\t\t\t//username: obj.calendar_member_id+\"\",\r\n");
      out.write("\t\t\t\t\t\ttitle: obj.title+\"\",\r\n");
      out.write("\t\t\t\t\t\tcontent: obj.content+\"\",\r\n");
      out.write("\t\t\t\t\t\tstart: moment(obj.start),\r\n");
      out.write("\t\t\t\t\t\tend: moment(obj.end),\r\n");
      out.write("\t\t\t\t\t\tcolor: obj.color,\r\n");
      out.write("\t\t\t\t\t\tcalendar_cate: obj.calendar_cate\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tvar event = {\r\n");
      out.write("\t\t\t\t\t\tid: obj.calendar_id+\"\",\r\n");
      out.write("\t\t\t\t\t\t//username: obj.calendar_member_id+\"\",\r\n");
      out.write("\t\t\t\t\t\ttitle: obj.title+\"\",\r\n");
      out.write("\t\t\t\t\t\tcontent: obj.content+\"\",\r\n");
      out.write("\t\t\t\t\t\tstart: moment(obj.start),\r\n");
      out.write("\t\t\t\t\t\tend: moment(obj.end),\r\n");
      out.write("\t\t\t\t\t\tcolor: obj.color,\r\n");
      out.write("\t\t\t\t\t\tcalendar_cate: obj.calendar_cateSelf\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t  if(obj.calendar_cate != 0){\r\n");
      out.write("\t\t\t    var event = {\r\n");
      out.write("\t\t\t    \tid: obj.calendar_id+\"\",\r\n");
      out.write("\t\t\t\t\t\t//username: obj.calendar_member_id+\"\",\r\n");
      out.write("\t\t\t\t\t\ttitle: obj.title+\"\",\r\n");
      out.write("\t\t\t\t\t\tcontent: obj.content+\"\",\r\n");
      out.write("\t\t\t\t\t\tstart: moment(obj.start).format(),\r\n");
      out.write("\t\t\t\t\t\tend: moment(obj.end).format(),\r\n");
      out.write("\t\t\t\t\t\tcolor: obj.color,\r\n");
      out.write("\t\t\t\t\t\tcalendar_cate: obj.calendar_cate,\r\n");
      out.write("\t\t\t        allDay: true\r\n");
      out.write("\t\t\t    };\r\n");
      out.write("\t\t\t  }else{\r\n");
      out.write("\t\t\t    var event = {\r\n");
      out.write("\t\t\t    \tid: obj.calendar_id+\"\",\r\n");
      out.write("\t\t\t\t\t\t//username: obj.calendar_member_id+\"\",\r\n");
      out.write("\t\t\t\t\t\ttitle: obj.title+\"\",\r\n");
      out.write("\t\t\t\t\t\tcontent: obj.content+\"\",\r\n");
      out.write("\t\t\t\t\t\tstart: moment(obj.start).format(),\r\n");
      out.write("\t\t\t\t\t\tend: moment(obj.end).format(),\r\n");
      out.write("\t\t\t\t\t\tcolor: obj.color,\r\n");
      out.write("\t\t\t\t\t\tcalendar_cate: obj.calendar_cateSelf,\r\n");
      out.write("\t\t\t        allDay: true\r\n");
      out.write("\t\t\t    };\r\n");
      out.write("\t\t\t  }\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t  \r\n");
      out.write("\t  return event;\r\n");
      out.write("  }// printCal end\r\n");
      out.write("  \r\n");
      out.write("\tfunction adChBx(){\r\n");
      out.write("\t\tif($('#allDay').is(':checked')){\r\n");
      out.write("\t\t\t$('#start_time').attr('disabled',true);\r\n");
      out.write("\t\t\t$('#end_time').attr('disabled',true);\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('#start_time').removeAttr('disabled')\r\n");
      out.write("\t\t\t$('#end_time').removeAttr('disabled')\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tfunction modadChBx(){\r\n");
      out.write("\t\tif($('#modallDay').is(':checked')){\r\n");
      out.write("\t\t\t$('#modstart_time').attr('disabled',true);\r\n");
      out.write("\t\t\t$('#modend_time').attr('disabled',true);\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('#modstart_time').removeAttr('disabled')\r\n");
      out.write("\t\t\t$('#modend_time').removeAttr('disabled')\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style media=\"screen\">\r\n");
      out.write("  #calendar {\r\n");
      out.write("    width: 90%;\r\n");
      out.write("    display: block;\r\n");
      out.write("    margin-left: auto;\r\n");
      out.write("    margin-right: auto;\r\n");
      out.write("  }\r\n");
      out.write("  .centered {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  .colpick {\r\n");
      out.write("  z-index: 9999;\r\n");
      out.write("}\r\n");
      out.write("#myModal .modal-body {\r\n");
      out.write("    overflow-y: visible;\r\n");
      out.write("}\r\n");
      out.write("  \r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-3\">\r\n");
      out.write("\t\t\t\t왼쪽 메뉴바\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div>캘린더 설정</div>\r\n");
      out.write("\t\t\t\t<div align= \"center\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" data-toggle=\"modal\" data-target=\"#myModal\">일정 등록하기</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- The calendar container -->\r\n");
      out.write("\t\t\t<div class=\"col-9\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<div id=\"calendar\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t<!-- 일정보기 ================================================================================================================================== -->\r\n");
      out.write("\t\t\t\t\t<div class=\"modal fade\" id=\"dayModal\" role=\"dialog\">\r\n");
      out.write("    \t\t\t\t\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t\t\t<form class=\"form-horizontal\" role=\"form\" id=\"sform\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${root}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/schedule/sadd.kitri\" method=\"get\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- MODAL HEADER -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h4 class=\"modal-title\">일정 보기</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"close float-right\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- MODAL BODY -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-body\" id=\"modalBody\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- hidden value -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" id=\"pid\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" id=\"colorProp\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" id=\"cate_num\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" id=\"isallDay\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div align= \"center\" style=\"padding-left: 40px;\"><label >구분</label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- spring form 태그로 select 불러오기 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-lg-10\" id=\"pselect\"></label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\" style=\"padding-left: 40px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div align= \"center\"><label >시작날짜</label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-lg-10\" id=\"pstart\"></label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\" style=\"padding-left: 40px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div align= \"center\"><label >종료날짜</label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-lg-10\" id=\"pend\"></label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\" style=\"padding-left: 40px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div align= \"center\"><label >제목</label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-lg-10\" id=\"psubject\"></label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\" style=\"padding-left: 40px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div align= \"center\"><label >내용</label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div id=\"pcontent\" class=\"col-lg-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" onclick=\"modifyBtn()\">수정하기</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" id=\"deleteBtn\">삭제하기</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<input class=\"jscolor {hash:true}\" value=\"ab2567\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- 스케쥴 등록 MODAL 시작 ================================================================================================================================== -->\r\n");
      out.write("\t\t\t\t\t<div class=\"modal fade\" id=\"myModal\" role=\"dialog\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-dialog modal-60size\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<!-- Modal content-->\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t\t\t<form class=\"form-horizontal\" role=\"form\" id=\"sform\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${root}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/schedule/sadd.kitri\" method=\"get\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- MODAL HEADER -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h4 class=\"modal-title\">일정 등록하기</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"close float-right\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- MODAL BODY -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-body\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<label class=\" control-label \" style=\"padding-left: 40px;\">구분</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-5\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- spring form 태그로 select 불러오기 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select onclick=\"inputTag(this.value)\" id=\"calCate\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"0\" onchange=\"showInput()\">직접 입력</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"selfCate\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"selfInput\" style=\"display: inline; width: 100px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"color\" id=\"colorFix\" onclick=\"console.log(this.value)\" style=\"display: inline;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfunction inputTag(i){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif(i == 0){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t$('#selfCate').css('display', 'block');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t$('#selfCate').css('display', 'none');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div style=\"padding-left: 40px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"aDay\" id=\"allDay\" onchange=\"adChBx();\">하루종일\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- <label class=\" control-label \" style=\"padding-left: 20px;\">색상</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input name=\"color2\" type=\"hidden\" id=\"color_value\" value=\"99cc00\">\r\n");
      out.write("\t       \t\t \t\t\t\t\t\t\t\t<button class=\"jscolor {valueElement: 'color_value'}\">Pick a color</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input class=\"jscolor\" value=\"ab2567\" id=\"colorTexto\" name=\"colorTexto\"> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\" control-label \" style=\"padding-left: 40px;\">시작날짜</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"date\" name=\"sstart_date\" id=\"start_date\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"time\" name=\"sstart_time\" id=\"start_time\" class=\"st\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\" control-label \" style=\"padding-left: 40px;\">종료날짜</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"date\" name=\"send_date\" id=\"end_date\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"time\" name=\"send_time\" id=\"end_time\" class=\"st\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\" control-label \" style=\"padding-left: 40px;\">제목</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"sname\" id=\"sname\" style=\"width: 300px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group\" id=\"text\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<textarea id=\"summernote\" name=\"summernote\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" id=\"registBtn\" onclick=\"registBtn();\">등록하기</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- 수정모달     ==================================================================================================================================-->\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal fade\" id=\"modModal\" role=\"dialog\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-dialog modal-60size\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t\t\t<form class=\"form-horizontal\" role=\"form\" id=\"sform\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${root}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/schedule/sadd.kitri\" method=\"get\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- MODAL HEADER -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h4 class=\"modal-title\">일정 수정하기</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"close float-right\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- MODAL BODY -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-body\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<label class=\" control-label \" style=\"padding-left: 40px;\">구분</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-5\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select onclick=\"modinputTag(this.value)\" id=\"modcalCate\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"0\" onchange=\"showInput()\">직접 입력</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"modselfCate\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"modselfInput\" style=\" width: 100px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"color\" id=\"modcolorFix\" onclick=\"console.log(this.value)\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfunction modinputTag(i){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif(i == 0){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t$('#modselfCate').css('display', 'block');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t$('#modselfCate').css('display', 'none');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div style=\"padding-left: 40px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"aDay\" id=\"modallDay\" onchange=\"modadChBx();\">하루종일\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- <label class=\" control-label \" style=\"padding-left: 20px;\">색상</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input name=\"color2\" type=\"hidden\" id=\"color_value\" value=\"99cc00\">\r\n");
      out.write("\t       \t\t \t\t\t\t\t\t\t\t<button class=\"jscolor {valueElement: 'color_value'}\">Pick a color</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input class=\"jscolor\" value=\"ab2567\" id=\"colorTexto\" name=\"colorTexto\"> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\" control-label \" style=\"padding-left: 40px;\">시작날짜</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"date\" name=\"sstart_date\" id=\"modstart_date\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"time\" name=\"sstart_time\" id=\"modstart_time\" class=\"st\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\" control-label \" style=\"padding-left: 40px;\">종료날짜</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"date\" name=\"send_date\" id=\"modend_date\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"time\" name=\"send_time\" id=\"modend_time\" class=\"st\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\" control-label \" style=\"padding-left: 40px;\">제목</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"sname\" id=\"modsname\" style=\"width: 300px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group\" id=\"modtext\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<textarea id=\"modsummernote\" name=\"modsummernote\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" id=\"calId\">\r\n");
      out.write("\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" id=\"modregistBtn\" onclick=\"modiftCal();\">수정하기</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/calendar/calendar.jsp(895,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("item");
      // /WEB-INF/views/calendar/calendar.jsp(895,11) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/calendar/calendar.jsp(895,11) '${ cateList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ cateList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/calendar/calendar.jsp(895,11) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("stat");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
            if (_jspx_meth_c_005fchoose_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/calendar/calendar.jsp(899,13) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ stat.first }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ item.cal_cate_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" id=\"firstNode\" >");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ item.cal_cate_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ item.cal_cate_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('"');
          out.write(' ');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ item.cal_cate_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/calendar/calendar.jsp(1000,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("item");
      // /WEB-INF/views/calendar/calendar.jsp(1000,11) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/calendar/calendar.jsp(1000,11) '${ cateList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ cateList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/calendar/calendar.jsp(1000,11) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVarStatus("stat");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
            if (_jspx_meth_c_005fchoose_005f1(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /WEB-INF/views/calendar/calendar.jsp(1004,13) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ stat.first }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ item.cal_cate_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" id=\"modfirstNode\" >");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ item.cal_cate_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f1_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ item.cal_cate_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('"');
          out.write(' ');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ item.cal_cate_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
      _jspx_th_c_005fotherwise_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f1_reused);
    }
    return false;
  }
}
